@charset 'utf-8';
@use "sass:math";

$font-name: 'Pretendard';
$base-rem-size: 10;

// 단위 제거
@function remove-unit($value) {
  @return math.div($value, $value * 0 + 1);
}

// rem 계산
@function rem($px, $base: $base-rem-size) {
  @return math.div($px, $base) * 1rem;
}

/* font */
@mixin ftR {
    font-family: $font-name;
    font-weight: 400;
}

@mixin ftM {
    font-family: $font-name;
    font-weight: 500;
}

@mixin ftB {
    font-family: $font-name;
    font-weight: 700;
}

@mixin ftSize($size) {
    @if $size=='small' {
        font-size: rem(12);
        letter-spacing: normal;
    }

    @else if $size=='regular' {
        font-size: rem(23);
        letter-spacing: rem(-0.46);
    }

    @else if $size=='large' {
        font-size: rem(35);
        letter-spacing: normal;
    }

    @else if $size=='title' {
        font-size: rem(50);
        letter-spacing: rem(-1);
    }

    @else {
        font-size: rem($size);
    }
}

@mixin ellipsis($lines: 1) {
    @if ($lines==1) {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    @else {
        display: -webkit-box;
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
    }
}

/* layout */
@mixin flex($align, $justify, $gap:0, $direction: row) {
    display: flex;
    align-items: $align;
    justify-content: $justify;
    gap: $gap;
    flex-direction: $direction;
}

@mixin centerX($type: absolute, $top: null, $bottom: null) {
    @if($type==fixed or $type==absolute) {
        position: $type;
        left: 50%;
        top: $top;
        bottom: $bottom;
        transform: translateX(-50%);
    }
}

@mixin centerY($type: absolute, $left: null, $right: null) {
    @if($type==fixed or $type==absolute) {
        position: $type;
        top: 50%;
        left: $left;
        right: $right;
        transform: translateY(-50%);
    }
}

@mixin centerXY($type: absolute) {
    @if($type==fixed or $type==absolute) {
        position: $type;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}

@mixin absolute($top: null, $left: null, $bottom: null, $right: null) {
    position: absolute;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin fixed($top: null, $left: null, $bottom: null, $right: null) {
    position: fixed;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

/* scroll */
@mixin scroll {
    overflow-y: auto;

    &::-webkit-scrollbar {
        width: 7px;
        height: 7px;
    }

    &::-webkit-scrollbar-thumb {
        background: $black;
        border-radius: 5px;
    }

    &::-webkit-scrollbar-track {
        background: $white;
    }
}

@mixin innerscroll($height) {
    overflow-y: auto;
    @include scroll;
    max-height: $height;
}

@mixin noscroll {
    -ms-overflow-style: none;
    scrollbar-width: none;

    &::-webkit-scrollbar {
        display: none;
    }
}

@mixin content($display: inline-block) {
    content: '';
    display: $display;
}